import java.util.*;
public class CompletingATree {
  public static void main( String[] args ) {
    int n = 905;
    String[] graph = {"674 514",
"20 748",
"386 313",
"246 306",
"712 77",
"257 331",
"102 30",
"621 96",
"607 301",
"54 43",
"35 113",
"81 854",
"93 85",
"896 107",
"5 37",
"54 73",
"48 89",
"254 150",
"171 62",
"329 668",
"177 449",
"466 715",
"811 214",
"466 47",
"96 92",
"335 866",
"16 273",
"207 40",
"246 177",
"49 713",
"506 298",
"342 245",
"403 726",
"727 220",
"888 52",
"587 266",
"736 629",
"813 158",
"865 388",
"34 368",
"288 135",
"17 741",
"785 552",
"434 183",
"455 139",
"121 169",
"900 499",
"358 423",
"108 357",
"172 560",
"643 123",
"901 49",
"42 34",
"239 222",
"242 255",
"486 312",
"97 44",
"64 12",
"403 877",
"836 643",
"256 864",
"543 53",
"768 426",
"172 247",
"375 202",
"710 331",
"344 72",
"633 154",
"366 188",
"124 52",
"393 567",
"110 17",
"592 215",
"282 398",
"709 219",
"75 29",
"779 310",
"217 767",
"653 416",
"354 724",
"790 236",
"346 393",
"98 139",
"153 575",
"34 732",
"339 92",
"525 789",
"36 49",
"521 629",
"744 711",
"50 68",
"132 513",
"84 13",
"452 201",
"244 492",
"80 189",
"110 493",
"342 502",
"139 399",
"857 457",
"1 41",
"127 131",
"121 258",
"191 652",
"261 93",
"286 2",
"29 20",
"2 3",
"850 460",
"80 11",
"233 251",
"670 453",
"3 6",
"42 243",
"656 27",
"52 297",
"423 581",
"108 602",
"624 308",
"304 172",
"793 663",
"280 318",
"25 535",
"82 40",
"169 327",
"770 729",
"619 455",
"280 50",
"13 95",
"7 66",
"516 858",
"410 453",
"156 33",
"460 27",
"640 777",
"421 810",
"38 205",
"180 97",
"319 61",
"852 660",
"166 269",
"549 179",
"24 3",
"147 333",
"111 108",
"254 669",
"271 265",
"354 126",
"51 317",
"213 474",
"15 48",
"405 608",
"328 228",
"500 528",
"783 176",
"119 501",
"491 347",
"662 442",
"772 627",
"618 300",
"718 403",
"842 568",
"146 597",
"792 510",
"853 794",
"507 158",
"672 624",
"192 81",
"170 212",
"207 683",
"136 377",
"610 578",
"27 23",
"101 146",
"169 283",
"348 64",
"873 899",
"125 157",
"667 337",
"380 11",
"720 615",
"478 324",
"185 484",
"2 479",
"79 75",
"614 159",
"630 807",
"441 461",
"3 39",
"189 495",
"694 428",
"4 165",
"294 367",
"473 98",
"666 447",
"171 838",
"462 8",
"762 594",
"434 733",
"8 397",
"12 1",
"579 146",
"314 96",
"808 98",
"754 318",
"22 840",
"9 248",
"5 30",
"540 678",
"99 72",
"569 508",
"298 53",
"816 138",
"44 2",
"575 806",
"181 379",
"95 480",
"605 639",
"22 116",
"834 363",
"60 263",
"337 497",
"516 638",
"505 703",
"55 5",
"210 467",
"833 144",
"536 394",
"542 85",
"399 451",
"18 145",
"349 150",
"213 717",
"32 416",
"44 606",
"263 369",
"381 765",
"269 596",
"3 33",
"406 171",
"678 845",
"446 275",
"70 22",
"63 105",
"459 96",
"500 262",
"149 557",
"601 31",
"88 122",
"103 143",
"10 18",
"334 898",
"141 336",
"83 63",
"220 198",
"106 65",
"274 740",
"578 13",
"83 292",
"71 55",
"634 746",
"588 229",
"137 469",
"76 77",
"186 827",
"162 82",
"408 250",
"67 37",
"96 183",
"110 322",
"565 423",
"73 210",
"65 114",
"67 729",
"322 330",
"131 225",
"90 52",
"635 43",
"2 1",
"256 4",
"429 438",
"107 17",
"1 7",
"45 21",
"519 72",
"109 126",
"229 585",
"798 646",
"778 554",
"179 739",
"9 11",
"741 819",
"481 426",
"129 552",
"759 723",
"795 710",
"465 870",
"27 119",
"234 223",
"201 19",
"802 257",
"476 598",
"603 174",
"472 131",
"17 13",
"433 351",
"15 277",
"863 152",
"157 196",
"562 339",
"97 108",
"201 363",
"242 274",
"62 47",
"479 489",
"450 293",
"435 660",
"880 465",
"182 508",
"799 513",
"231 41",
"94 12",
"821 585",
"186 153",
"329 548",
"5 43",
"182 463",
"34 820",
"562 657",
"16 61",
"534 763",
"714 627",
"411 363",
"376 521",
"77 132",
"45 278",
"341 815",
"28 130",
"84 309",
"330 800",
"145 153",
"353 111",
"63 31",
"742 44",
"130 837",
"477 84",
"189 229",
"403 289",
"155 128",
"299 199",
"716 158",
"163 199",
"803 721",
"343 684",
"593 183",
"661 542",
"111 573",
"335 268",
"138 499",
"116 232",
"622 8",
"223 71",
"9 193",
"537 342",
"540 354",
"430 205",
"47 874",
"13 7",
"302 576",
"240 229",
"91 150",
"43 78",
"875 210",
"579 664",
"861 638",
"730 94",
"825 786",
"488 260",
"626 604",
"699 287",
"242 355",
"17 56",
"465 10",
"102 217",
"242 238",
"427 306",
"17 244",
"174 121",
"623 648",
"226 35",
"247 636",
"609 631",
"569 860",
"23 128",
"525 826",
"856 426",
"787 116",
"157 343",
"101 59",
"51 33",
"334 21",
"630 204",
"588 895",
"141 91",
"396 46",
"555 398",
"846 390",
"651 378",
"77 152",
"444 905",
"93 252",
"203 14",
"402 356",
"2 28",
"45 53",
"859 553",
"517 220",
"126 185",
"577 277",
"492 690",
"188 153",
"280 303",
"617 192",
"198 158",
"51 72",
"665 531",
"346 154",
"312 136",
"431 534",
"885 519",
"41 76",
"563 591",
"84 801",
"142 187",
"89 362",
"442 747",
"20 1",
"316 184",
"50 249",
"84 401",
"496 96",
"142 503",
"161 705",
"878 508",
"176 404",
"208 673",
"182 294",
"515 311",
"475 29",
"361 283",
"587 791",
"8 14",
"133 111",
"884 438",
"216 586",
"144 108",
"5 4",
"193 238",
"24 504",
"260 64",
"390 190",
"268 505",
"510 797",
"83 287",
"410 335",
"706 750",
"9 250",
"904 300",
"194 511",
"238 538",
"761 32",
"450 454",
"569 831",
"349 829",
"7 88",
"7 176",
"893 447",
"275 471",
"291 287",
"15 5",
"342 426",
"723 112",
"311 482",
"542 582",
"137 553",
"500 516",
"758 145",
"215 275",
"347 227",
"509 881",
"305 695",
"830 419",
"144 194",
"272 282",
"547 278",
"725 361",
"158 76",
"92 18",
"98 154",
"175 158",
"272 130",
"85 38",
"14 46",
"156 228",
"647 348",
"264 207",
"6 564",
"417 514",
"305 415",
"52 118",
"23 385",
"117 16",
"104 182",
"164 1",
"330 389",
"27 32",
"245 76",
"265 101",
"244 400",
"429 27",
"15 22",
"786 704",
"389 632",
"111 140",
"398 873",
"14 31",
"26 115",
"76 769",
"370 217",
"534 728",
"738 226",
"172 889",
"876 236",
"375 457",
"791 851",
"422 183",
"675 848",
"161 640",
"3 25",
"835 97",
"753 267",
"5 9",
"301 659",
"18 21",
"541 142",
"352 189",
"350 282",
"118 276",
"74 570",
"48 817",
"696 369",
"887 321",
"559 311",
"572 449",
"23 4",
"731 621",
"31 847",
"352 522",
"73 676",
"325 383",
"824 260",
"599 99",
"138 113",
"266 205",
"224 88",
"192 381",
"735 304",
"458 125",
"773 767",
"326 240",
"367 646",
"209 436",
"509 241",
"274 902",
"15 324",
"80 441",
"571 420",
"376 180",
"54 208",
"390 407",
"129 106",
"273 391",
"119 214",
"300 75",
"125 92",
"347 649",
"213 594",
"191 51",
"147 80",
"4 2",
"211 174",
"38 18",
"514 766",
"752 368",
"41 136",
"692 689",
"502 855",
"771 57",
"841 638",
"882 96",
"44 658",
"291 387",
"274 338",
"262 102",
"177 611",
"90 177",
"879 700",
"689 677",
"167 55",
"137 18",
"498 63",
"796 596",
"704 405",
"247 794",
"97 583",
"10 432",
"733 849",
"70 530",
"805 621",
"279 111",
"532 353",
"544 85",
"268 412",
"54 65",
"105 127",
"475 600",
"260 267",
"558 230",
"191 561",
"395 281",
"168 54",
"14 641",
"707 23",
"12 40",
"59 372",
"435 256",
"775 606",
"64 545",
"667 701",
"839 308",
"26 23",
"68 302",
"419 176",
"439 29",
"16 13",
"102 470",
"285 189",
"37 160",
"116 524",
"743 591",
"459 764",
"106 510",
"114 374",
"464 433",
"624 688",
"417 316",
"173 48",
"650 195",
"679 109",
"546 385",
"134 103",
"590 346",
"237 305",
"568 190",
"737 197",
"398 531",
"7 8",
"751 274",
"812 171",
"29 781",
"45 289",
"12 91",
"65 98",
"47 8",
"16 121",
"295 258",
"42 81",
"776 164",
"63 230",
"120 257",
"106 721",
"697 263",
"277 671",
"1 36",
"79 112",
"19 17",
"7 86",
"215 114",
"708 264",
"607 722",
"445 36",
"202 59",
"47 424",
"749 467",
"680 562",
"30 645",
"92 190",
"539 94",
"170 164",
"87 18",
"10 7",
"604 520",
"320 76",
"359 315",
"526 361",
"456 228",
"221 868",
"22 120",
"550 117",
"311 243",
"468 274",
"346 551",
"157 529",
"107 418",
"448 105",
"113 774",
"886 341",
"188 222",
"157 241",
"171 308",
"93 310",
"61 163",
"539 682",
"122 605",
"525 634",
"54 172",
"413 174",
"58 52",
"685 468",
"50 301",
"6 50",
"442 357",
"687 368",
"755 645",
"744 780",
"213 208",
"273 341",
"105 184",
"233 172",
"261 447",
"223 253",
"295 644",
"28 358",
"47 414",
"382 152",
"56 420",
"3 74",
"409 200",
"194 625",
"891 887",
"171 745",
"566 56",
"121 533",
"872 804",
"44 59",
"35 11",
"209 105",
"281 48",
"149 14",
"270 156",
"144 332",
"883 50",
"120 620",
"225 315",
"337 702",
"623 552",
"345 12",
"319 365",
"459 483",
"615 308",
"103 48",
"574 903",
"231 554",
"227 74",
"329 719",
"105 166",
"178 127",
"1 34",
"822 606",
"711 686",
"353 444",
"828 815",
"340 38",
"441 844",
"324 700",
"373 85",
"523 199",
"485 159",
"313 71",
"437 380",
"282 574",
"693 71",
"843 673",
"335 384",
"445 897",
"189 580",
"247 563",
"151 698",
"425 268",
"236 24",
"221 784",
"172 179",
"6 290",
"25 206",
"219 115",
"476 461",
"564 654",
"109 105",
"156 487",
"168 814",
"26 388",
"490 42",
"540 556",
"264 337",
"405 274",
"817 869",
"684 756",
"431 399",
"20 100",
"528 686",
"296 231",
"378 95",
"731 894",
"525 35",
"284 121",
"76 268",
"30 595",
"127 613",
"113 323",
"159 627",
"494 64",
"150 197",
"75 871",
"69 68",
"343 364",
"539 642",
"62 148",
"57 18",
"227 616",
"159 63",
"184 307",
"612 192",
"135 131",
"502 609",
"706 434",
"394 319",
"133 677",
"130 351",
"195 321",
"206 392",
"159 195",
"568 637",
"614 862",
"197 356",
"151 760",
"41 161",
"641 734",
"354 757",
"681 151",
"804 395",
"151 371"};
    System.out.println(completingATree(n,graph));
  }
  
  public static int completingATree( int n, String[] graph ) {
    return stronglyConnectedComponents(fixGraph(n,graph)) - 1;
  }
  
  public static int stronglyConnectedComponents( ArrayList<ArrayList<Integer>> graph ) {
    int count = 0;
    boolean[] visited = new boolean[graph.size()];
    for(int i = 1; i < graph.size(); ++i) {
      if(!visited[i]) {
        LinkedList<Integer> q = new LinkedList<>();
        q.addLast(i);
        while(!q.isEmpty()) {
          int curr = q.removeFirst();
          visited[curr] = true;
          ArrayList<Integer> neighbors = graph.get(curr);
          for(int j = 0; j < neighbors.size(); ++j) {
            int next = neighbors.get(j);
            if(!visited[next]) {
              q.addLast(next);
            }
          }
        }
        ++count;
      }
    }
    return count;
  }
  
  public static ArrayList<ArrayList<Integer>> fixGraph( int n, String[] graph ) {
    ArrayList<ArrayList<Integer>> out = new ArrayList<>();
    out.add(null);
    for(int i = 0; i < n; ++i) {
      out.add(new ArrayList<>());
    }
    for(int i = 0; i < graph.length; ++i) {
      String[] parts = graph[i].split(" ");
      int x = Integer.parseInt(parts[0]);
      int y = Integer.parseInt(parts[1]);
      out.get(x).add(y);
      out.get(y).add(x);
    }
    return out;
  }
}