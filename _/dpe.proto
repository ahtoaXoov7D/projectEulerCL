syntax = "proto2";

package dpe;

message GetTaskRequest {
  optional int32 max_task_count = 1;
}

message GetTaskResponse {
  repeated int64 task_id = 1;
}

message WorkerStatus {
  optional string worker_id = 1;
  repeated int64 running_task = 2;
  repeated int64 finished_task = 3;
  optional int64 latency_sum = 4; // one way latency
  optional int64 request_count = 5;
  optional int64 updated_time = 6;
}

message TaskItem {
  enum TaskStatus {
    PENDING = 0;
    RUNNING = 1;
    DONE = 2;
  }
  optional int64 task_id = 1;
  optional TaskStatus status = 2;
  optional int64 result = 3;
  optional int64 time_usage = 4;
}

message MasterState {
  repeated TaskItem task_item = 1;
  repeated WorkerStatus worker_status = 2;
}

message FinishComputeRequest {
  repeated TaskItem task_item = 1;
  optional int64 total_time_usage = 2;
}

message Request {
  optional string name = 1;
  optional string worker_id = 2;

  optional int64 request_timestamp = 100 [default = 0];

  optional GetTaskRequest get_task = 300;
  optional FinishComputeRequest finish_compute = 301;
}

message Response {
  optional string name = 1;
  optional int64 error_code = 2;

  optional int64 response_timestamp = 100 [default = 0];

  optional int64 request_timestamp = 200 [default = 0];

  optional GetTaskResponse get_task = 300;
}
