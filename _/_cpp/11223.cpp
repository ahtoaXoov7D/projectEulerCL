#include <cstdio>
#include <map>
#include <string>
using namespace std;

map < string, char > m;

/*
A	.- 		J	.- - - 	S	... 	1	.- - - - 	.	.-.-.- 		:	- - -...
B	-... 	K	-.- 	T	- 		2	..- - - 	,	- -..- - 	;	-.-.-.
C	-.-. 	L	.-.. 	U	..- 	3	...- - 		?	..- -.. 	=	-...-
D	-.. 	M	- - 	V	...- 	4	....- 		'	.- - - -. 	+	.-.-.
E	. 		N	-. 		W	.- - 	5	..... 		!	-.-.- - 	-	-....-
F	..-. 	O	- - - 	X	-..- 	6	-.... 		/	-..-. 		_	..- -.-
G	- -. 	P	.- -. 	Y	-.- - 	7	- -... 		(	-.- -. 		"	.-..-.
H	.... 	Q	- -.- 	Z	- -.. 	8	- - -.. 	)	-.- -.- 	@	.- -.-.
I	.. 		R	.-. 	0	----- 	9	----.		&	.-... 	
*/
int main(void){
	// Alpha
	m[".-"] = 'A'; m["-..."] = 'B'; m["-.-."] = 'C'; m["-.."] = 'D';
	m["."] = 'E'; m["..-."] = 'F'; m["--."] = 'G'; m["...."] = 'H';
	m[".."] = 'I'; m[".---"] = 'J'; m["-.-"] = 'K'; m[".-.."] = 'L';
	m["--"] = 'M'; m["-."] = 'N'; m["---"] = 'O'; m[".--."] = 'P';
	m["--.-"] = 'Q'; m[".-."] = 'R'; m["..."] = 'S'; m["-"] = 'T';
	m["..-"] = 'U'; m["...-"] = 'V'; m[".--"] = 'W'; m["-..-"] = 'X';
	m["-.--"] = 'Y'; m["--.."] = 'Z';
	// Numeric
	m["-----"] = '0'; m[".----"] = '1'; m["..---"] = '2';
	m["...--"] = '3'; m["....-"] = '4'; m["....."] = '5';
	m["-...."] = '6'; m["--..."] = '7'; m["---.."] = '8'; m["----."] = '9';
	// Punctuation
	m[".-.-.-"] = '.'; m["--..--"] = ','; m["..--.."] = '?';
	m[".----."] = '\''; m["-.-.--"] = '!'; m["-..-."] = '/';
	m["-.--."] = '('; m["-.--.-"] = ')'; m[".-..."] = '&';
	m["---..."] = ':'; m["-.-.-."] = ';'; m["-...-"] = '=';
	m[".-.-."] = '+'; m["-....-"] = '-'; m["..--.-"] = '_';
	m[".-..-."] = '\"'; m[".--.-."] = '@';
	int t; scanf("%d\n", &t);
	char code[16], line[2048];
	for(int mnum = 0; mnum++ < t && gets(line); ){
//		puts(line);
		printf("Message #%d\n", mnum);
		for(int i = 0, j; line[i]; ++i){
			if(i && line[i] == ' ' && line[i - 1] == ' ') putc(32, stdout);
			for(j = i; line[j] == '.' || line[j] == '-'; code[j - i] = line[j++]); 
			code[j - i] = 0;
			if(j != i) putc(m[code], stdout);
			i = j - (j > i);
		}
		puts("");
		if(mnum < t) puts("");
	}
	return 0;
}

