#!/usr/bin/env python3
import sys
import os
import shutil
import glob
import yaml
import re
from subprocess import Popen, PIPE
DIR = os.path.dirname(os.path.abspath(__file__))
PROBLEMTOOLS = os.getenv("PROBLEMTOOLS", os.path.join(DIR, 'problemtools'))

problem_dir = os.path.abspath(sys.argv[1])
output_dir = os.path.join(problem_dir, '.epsilon')

if os.path.exists(output_dir):
    shutil.rmtree(output_dir)
os.mkdir(output_dir)

print('Generating HTML')
p = Popen([os.path.join(PROBLEMTOOLS, 'src', 'problem2html.py'), problem_dir, '-b', '-d', os.path.join(output_dir, 'statement')], stdout=PIPE)
if p.wait() != 0:
    print('Errors while generating HTML')
    sys.exit(1)

with open(os.path.join(output_dir, 'statement', 'index.html'), 'r') as f:
    mat = re.search('<h1>(.*?)</h1>', f.read(), re.DOTALL)
    if mat:
        problem_title = mat.group().split('<h1>')[1].split('</h1>')[0].replace('\n', ' ')

problem_yaml = {
    'title': problem_title,
    'examples': []
}
pdata = {}
with open(os.path.join(problem_dir, 'problem.yaml')) as f:
    pdata = yaml.load(f)
problem_yaml['points'] = pdata['points']

shutil.copy(os.path.join(problem_dir, 'problem.py'), os.path.join(output_dir, 'problem.py'))

static = os.path.join(problem_dir, 'problem_statement', 'static')
if os.path.exists(static):
    shutil.copytree(static, os.path.join(output_dir, 'static'))

with open(os.path.join(output_dir, 'problem.yml'), 'w') as f:
    yaml.dump(problem_yaml, stream=f)


